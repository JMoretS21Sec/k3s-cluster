---
- name: Create config directory
  ansible.builtin.file:
    path: /etc/rancher/k3s
    state: directory

- name: Copy K3S config file
  ansible.builtin.template:
    src: "{{ role_path }}/templates/config.yaml.j2"
    dest: /etc/rancher/k3s/config.yaml

- name: Check if HA mode with integrated datastor
  set_fact:
    ha_integrated_datastore: groups['master'] | length | int > 1 and k3s_datastore_endpoint is not defined

- name: Get first master hostname
  set_fact:
    first_master_hostname: "{{ hostvars[groups['master'][0]]['ansible_host'] }}"

- name: Install K3S Master (Single master or no integrated datastore)
  shell:
    cmd: "curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=server sh -"
    creates: /etc/rancher/k3s/k3s.yaml
  when: not ha_integrated_datastore

- name: Install K3S Master (Integrated datastore mode)
  shell:
    cmd: >
      curl -sfL https://get.k3s.io |
      {{ 'K3S_CLUSTER_INIT=true' if (ansible_host == first_master_hostname and k3s_reinstall is not defined) else 'K3S_URL=https://' + lb_internal_floating_ip + ':6443' }}
      INSTALL_K3S_EXEC=server
      sh -
    creates: /etc/rancher/k3s/k3s.yaml
  when: ha_integrated_datastore

- name: Wait for K3S config
  wait_for:
    path: /etc/rancher/k3s/k3s.yaml

- name: Fetch node-token
  ansible.builtin.fetch:
    src: /var/lib/rancher/k3s/server/node-token
    dest: "{{ playbook_dir }}/../../node-token"
    flat: yes
  become: true
  when: ansible_host == first_master_hostname

#### External kubeconfig
- name: Copy kubeconfig file to tmp directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /tmp/kubeconfig
    remote_src: yes
  when: ansible_host == first_master_hostname

- name: "Replace https://localhost:6443 with https://{{ lb_external_floating_ip }}:6443"
  command: >-
    k3s kubectl config set-cluster default
      --server=https://{{ lb_external_floating_ip }}:6443
      --kubeconfig /tmp/kubeconfig
  changed_when: true
  when: ansible_host == first_master_hostname

- name: Fetch kubeconfig
  ansible.builtin.fetch:
    src: /tmp/kubeconfig
    dest: "{{ playbook_dir }}/../../kubeconfig.yml"
    flat: yes
  when: ansible_host == first_master_hostname

- name: Remove temp kubeconfig
  ansible.builtin.file:
    path: /tmp/kubeconfig
    state: absent
  when: ansible_host == first_master_hostname
...
