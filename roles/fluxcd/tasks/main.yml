---
- name: Delete K3S HelmChart CRD
  command:
    cmd: "kubectl delete crd helmcharts.helm.cattle.io"
  ignore_errors: yes

- name: Delete K3S HelmChart CRD
  command:
    cmd: "kubectl delete crd helmchartconfigs.helm.cattle.io"
  ignore_errors: yes

# curl -sL https://api.github.com/repos/fluxcd/flux2/releases | jq -r ".[0].name"
- name: Download fluxcd cli
  ansible.builtin.unarchive:
    src: "https://github.com/fluxcd/flux2/releases/download/v{{ fluxcd.version }}/flux_{{ fluxcd.version }}_linux_arm.tar.gz"
    dest: ~{{ ansible_user }}
    remote_src: yes
  become: yes

- name: Bootstrap fluxcd
  ansible.builtin.command:
    cmd: >
      ~{{ ansible_user }}/flux bootstrap github
      --kubeconfig /etc/rancher/k3s/k3s.yaml
      --components-extra=image-reflector-controller,image-automation-controller
      --owner={{ fluxcd.repository_owner }}
      --repository={{ fluxcd.repository_name }}
      --path={{ fluxcd.cluster_path }}
      --read-write-key
      {% if fluxcd.github_personal_account %}
      --personal
      {% else %}
      {% for team in fluxcd.github_teams %}
      --team={{ team }}
      {% endfor %}
      {% endif %}
  environment:
    GITHUB_TOKEN: "{{ fluxcd.github_personal_token }}"

- name: Create SOPS GPG decryption secret
  shell:
    cmd: >
      gpg --export-secret-keys --armor "{{ fluxcd.sops_decryption.gpg_key_id }}" |
      kubectl create secret generic {{ fluxcd.sops_decryption.secret_name }}
      --namespace=flux-system
      --from-file=sops.asc=/dev/stdin -o yaml --dry-run=client
      | kubectl apply -f -
  delegate_to: localhost
  when: fluxcd.sops_decryption.enabled and fluxcd.sops_decryption.type == 'gpg'
...
