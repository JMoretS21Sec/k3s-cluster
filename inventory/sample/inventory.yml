---
all:
  vars:
    ansible_user: pi
    # Floating IP configuration
    control_plane_floating_ip: "192.168.0.2"
    # Uncomment to use external datastore HA: https://rancher.com/docs/k3s/latest/en/installation/ha/
#    k3s_datastore_endpoint: 'http://192.168.50.100:2379'
    k3s_token: "somesecrettoken"
    # Uncomment to add additional hostnames or IP as a Subject Alternative Name in the TLS cert
#    k3s_additional_tls_san:
#      - "cluster.example.com"
    # K3S components: https://rancher.com/docs/k3s/latest/en/installation/install-options/server-config/#kubernetes-components
    k3s_components:
      coredns: no # We'll install a customised CoreDNS to be able to customise the config and manage it in Flux repository
      servicelb: no # We'll use kube-vip to assign IP addresses to LoadBalancer services
      traefik: no # We'll use nginx-ingress, to maintain control over the installation options (assign the correct IP address to the service)
      local-storage: yes # Local storage is not great for persistent volumes, you should install a better one if possible
      metrics-server: yes
    # The cloud controller takes care of giving IP addresses LoadBalancer services
    kube_vip_cloud_controller:
      enabled: yes
      ip_classes:
        cidr-ingress-nginx: 192.168.0.3/32                   # CIDR-based single ip for ingress-nginx Namespace
        cidr-global: 192.168.0.128/25                        # CIDR-based range which can be used in any Namespace
#        cidr-default: 192.168.0.200/29                      # CIDR-based IP range for use in the default Namespace
#        range-development: 192.168.0.210-192.168.0.219      # Range-based IP range for use in the development Namespace
#        cidr-finance: 192.168.0.220/29,192.168.0.230/29     # Multiple CIDR-based ranges for use in the finance Namespace
    # We use FluxCD and GitHub to deploy the other components: https://fluxcd.io/docs/
    fluxcd:
      enabled: yes
      version: "0.27.4"
      repository_owner: "febus982"
      repository_name: "k3s-cluster-flux-sample" # You should fork/copy content from https://github.com/febus982/k3s-cluster-flux-sample
      cluster_path: "clusters/k3s-pi"
      github_personal_token: "<personal_token>" # A personal token is necessary, check necessary permissions here: https://fluxcd.io/docs/installation/#github-and-github-enterprise
      github_personal_account: yes # If the repository owner is a GitHub Organisation set this to `no`
      github_teams: # If the repository owner is a GitHub Organisation, you need a list of teams to give maintainer access to
        - infrastructure
      sops_decryption: # Creates the secret needed to decrypt secrets encrypted using SOPS: https://fluxcd.io/docs/guides/mozilla-sops/
        enabled: no
        type: gpg # Only gpg type is currently supported
        secret_name: sops-gpg-secret
        gpg_key_id: "gpg_key_name_or_id"
    vertical_autoscaler:
      enabled: yes
      version: "0.10.0"
  children:
    k3s_cluster:

k3s_cluster:
  vars:
    # We avoid persisting the SSH host fingerprint to avoid errors caused by the floating IP
    # Jumping between the different Load Balancer Raspberry PIs
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ForwardAgent=yes"
    enable_sda_trim: no
  children:
    master:
    node:

master:
  # Remove the taint to allow pod scheduling on master nodes
  vars:
    node_taint: "CriticalAddonsOnly=true:NoSchedule"
  hosts:
  # List of master node Raspberry PIs and hostnames (or ip addresses)
    master1:
      ansible_host: master1.local
    master2:
      ansible_host: master2.local
    master3:
      ansible_host: master3.local

node:
  hosts:
    # List of non-master node Raspberry PIs and hostnames (or ip addresses)
    node1:
      ansible_host: node1.local

...
